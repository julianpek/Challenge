{"ast":null,"code":"var _jsxFileName = \"/Users/jpek/Documents/GitHub/challenge/src/App.js\";\n// import { useEffect, useState } from 'react';\nimport EditCustomer from './components/EditCustomer';\nimport CustomerList from './components/CustomerList';\nimport NavBar from './components/Layout/NavBar';\nimport Wrapper from './components/UI/Wrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [customers, setCustomers] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  // const fetchCustomersHandler = () => {\n  //   // try{\n  //   // const response = await\n  //   fetch(\n  //     'https://rawgit.com/wvchallenges/se-exp-challenge-invoice/master/settings.json'\n  //   )\n  //     .then(response => {\n  //       return response.json();\n  //     })\n  //     .then(data => {\n  //       setCustomers(data.customers);\n  //     });\n  //   return console.log(customers);\n  // };\n  //     if(!response.ok) {\n  //       throw new Error('Something went wrong!')\n  //     }\n  //     const data = await response.json();\n  //     const loadedCustomers=[];\n  //     for (const id in data) {\n  //       loadedCustomers.push({\n  //         id: id,\n  //         name: data[key].name,\n  //         email: data[key].email,\n  //         channel: data[key].channel,\n  //         address: data[key].address,\n  //         postal: data[key].postal,\n  //         city: data[key].city,\n  //         province: data[key].province,\n  //         country: data[key].country,\n  //       });\n  //     }\n  //     setCustomers(loadedCustomers);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }, []);\n  //   useEffect(()=>{\n  //     fetchCustomersHandler();\n  //   }, [fetchCustomersHandler]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(CustomerList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["EditCustomer","CustomerList","NavBar","Wrapper","App"],"sources":["/Users/jpek/Documents/GitHub/challenge/src/App.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\n\nimport EditCustomer from './components/EditCustomer';\nimport CustomerList from './components/CustomerList';\nimport NavBar from './components/Layout/NavBar';\nimport Wrapper from './components/UI/Wrapper';\n\nfunction App() {\n  // const [customers, setCustomers] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  // const fetchCustomersHandler = () => {\n  //   // try{\n  //   // const response = await\n  //   fetch(\n  //     'https://rawgit.com/wvchallenges/se-exp-challenge-invoice/master/settings.json'\n  //   )\n  //     .then(response => {\n  //       return response.json();\n  //     })\n  //     .then(data => {\n  //       setCustomers(data.customers);\n  //     });\n  //   return console.log(customers);\n  // };\n\n  //     if(!response.ok) {\n  //       throw new Error('Something went wrong!')\n  //     }\n  //     const data = await response.json();\n\n  //     const loadedCustomers=[];\n\n  //     for (const id in data) {\n  //       loadedCustomers.push({\n  //         id: id,\n  //         name: data[key].name,\n  //         email: data[key].email,\n  //         channel: data[key].channel,\n  //         address: data[key].address,\n  //         postal: data[key].postal,\n  //         city: data[key].city,\n  //         province: data[key].province,\n  //         country: data[key].country,\n  //       });\n  //     }\n\n  //     setCustomers(loadedCustomers);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }, []);\n\n  //   useEffect(()=>{\n  //     fetchCustomersHandler();\n  //   }, [fetchCustomersHandler]);\n\n  return (\n    <>\n      <NavBar />\n      <Wrapper>\n        <CustomerList />\n        {/* <EditCustomer /> */}\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AAEA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAA,uBACE,QAAC,YAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AASD;;KA7DQA,G;AA+DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}