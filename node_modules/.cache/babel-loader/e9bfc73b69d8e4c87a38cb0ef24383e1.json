{"ast":null,"code":"var _jsxFileName = \"/Users/jpek/Documents/GitHub/challenge/src/components/CustomerTable/CustomerTable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport EditModal from '../EditModal/EditModal';\nimport CustomerRow from './CustomerRow';\nimport classes from './CustomerTable.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomerTable = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [customer, setCustomer] = useState();\n  const [isCanadian, setIsCanadian] = useState(false);\n\n  const onEdit = data => {\n    setIsEditing(true);\n    setCustomer(data);\n\n    if (data.country === 'CA') {\n      setIsCanadian(true);\n    }\n  };\n\n  const onClose = () => {\n    setIsEditing(false);\n  };\n\n  const mappedCustomers = props.customers.map((customer, i) => /*#__PURE__*/_jsxDEV(CustomerRow, {\n    id: customer.id,\n    customerName: customer.name,\n    customerEmail: customer.email,\n    onClick: () => onEdit(customer)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isEditing && /*#__PURE__*/_jsxDEV(EditModal, {\n      backBtn: onClose,\n      customer: customer,\n      editing: isEditing,\n      can: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Customers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        cellSpacing: \"0\",\n        cellPadding: \"0\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: classes.tr_titles,\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), mappedCustomers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CustomerTable, \"d6cFTzSInZ2Q4sCHEY4Q7ekiYxA=\");\n\n_c = CustomerTable;\nexport default CustomerTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerTable\");","map":{"version":3,"names":["useState","EditModal","CustomerRow","classes","CustomerTable","props","isEditing","setIsEditing","customer","setCustomer","isCanadian","setIsCanadian","onEdit","data","country","onClose","mappedCustomers","customers","map","i","id","name","email","container","tr_titles"],"sources":["/Users/jpek/Documents/GitHub/challenge/src/components/CustomerTable/CustomerTable.js"],"sourcesContent":["import { useState } from 'react';\n\nimport EditModal from '../EditModal/EditModal';\nimport CustomerRow from './CustomerRow';\n\nimport classes from './CustomerTable.module.css';\n\nconst CustomerTable = props => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [customer, setCustomer] = useState();\n  const [isCanadian, setIsCanadian] = useState(false);\n\n  const onEdit = data => {\n    setIsEditing(true);\n    setCustomer(data);\n    if (data.country === 'CA') {\n      setIsCanadian(true);\n    }\n  };\n\n  const onClose = () => {\n    setIsEditing(false);\n  };\n\n  const mappedCustomers = props.customers.map((customer, i) => (\n    <CustomerRow\n      key={i}\n      id={customer.id}\n      customerName={customer.name}\n      customerEmail={customer.email}\n      onClick={() => onEdit(customer)}\n    />\n  ));\n\n  return (\n    <>\n      {isEditing && (\n        <EditModal backBtn={onClose} customer={customer} editing={isEditing} can/>\n      )}\n      <div className={classes.container}>\n        <h1>Customers</h1>\n      </div>\n      <div className={classes.container}>\n        <table cellSpacing='0' cellPadding='0'>\n          <tbody>\n            <tr className={classes.tr_titles}>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Actions</th>\n            </tr>\n            {mappedCustomers}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default CustomerTable;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;;;;AAEA,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAAA;;EAC7B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;EACA,MAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;;EAEA,MAAMY,MAAM,GAAGC,IAAI,IAAI;IACrBN,YAAY,CAAC,IAAD,CAAZ;IACAE,WAAW,CAACI,IAAD,CAAX;;IACA,IAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;MACzBH,aAAa,CAAC,IAAD,CAAb;IACD;EACF,CAND;;EAQA,MAAMI,OAAO,GAAG,MAAM;IACpBR,YAAY,CAAC,KAAD,CAAZ;EACD,CAFD;;EAIA,MAAMS,eAAe,GAAGX,KAAK,CAACY,SAAN,CAAgBC,GAAhB,CAAoB,CAACV,QAAD,EAAWW,CAAX,kBAC1C,QAAC,WAAD;IAEE,EAAE,EAAEX,QAAQ,CAACY,EAFf;IAGE,YAAY,EAAEZ,QAAQ,CAACa,IAHzB;IAIE,aAAa,EAAEb,QAAQ,CAACc,KAJ1B;IAKE,OAAO,EAAE,MAAMV,MAAM,CAACJ,QAAD;EALvB,GACOW,CADP;IAAA;IAAA;IAAA;EAAA,QADsB,CAAxB;EAUA,oBACE;IAAA,WACGb,SAAS,iBACR,QAAC,SAAD;MAAW,OAAO,EAAES,OAApB;MAA6B,QAAQ,EAAEP,QAAvC;MAAiD,OAAO,EAAEF,SAA1D;MAAqE,GAAG;IAAxE;MAAA;MAAA;MAAA;IAAA,QAFJ,eAIE;MAAK,SAAS,EAAEH,OAAO,CAACoB,SAAxB;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF,eAOE;MAAK,SAAS,EAAEpB,OAAO,CAACoB,SAAxB;MAAA,uBACE;QAAO,WAAW,EAAC,GAAnB;QAAuB,WAAW,EAAC,GAAnC;QAAA,uBACE;UAAA,wBACE;YAAI,SAAS,EAAEpB,OAAO,CAACqB,SAAvB;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,EAMGR,eANH;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA,gBADF;AAsBD,CAjDD;;GAAMZ,a;;KAAAA,a;AAmDN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}