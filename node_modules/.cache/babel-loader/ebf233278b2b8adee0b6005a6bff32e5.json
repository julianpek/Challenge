{"ast":null,"code":"var _jsxFileName = \"/Users/jpek/Documents/GitHub/challenge/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport EditCustomer from './components/EditCustomer';\nimport CustomerList from './components/CustomerList';\nimport NavBar from './components/Layout/NavBar';\nimport Wrapper from './components/UI/Wrapper';\nimport Button from './components/UI/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [customers, setCustomers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchCustomersHandler = () => {\n    // try{\n    // const response = await\n    fetch('https://rawgit.com/wvchallenges/se-exp-challenge-invoice/master/settings.json').then(response => {\n      return response.json();\n    }).then(data => {\n      setCustomers(data.customers);\n    });\n  }; //     if(!response.ok) {\n  //       throw new Error('Something went wrong!')\n  //     }\n  //     const data = await response.json();\n  //     const loadedCustomers=[];\n  //     for (const id in data) {\n  //       loadedCustomers.push({\n  //         id: id,\n  //         name: data[key].name,\n  //         email: data[key].email,\n  //         channel: data[key].channel,\n  //         address: data[key].address,\n  //         postal: data[key].postal,\n  //         city: data[key].city,\n  //         province: data[key].province,\n  //         country: data[key].country,\n  //       });\n  //     }\n  //     setCustomers(loadedCustomers);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }, []);\n  //   useEffect(()=>{\n  //     fetchCustomersHandler();\n  //   }, [fetchCustomersHandler]);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(CustomerList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: fetchCustomersHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"302thdn4XFJSDqDCVT4RSI2Lkxg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","EditCustomer","CustomerList","NavBar","Wrapper","Button","App","customers","setCustomers","isLoading","setIsLoading","error","setError","fetchCustomersHandler","fetch","then","response","json","data"],"sources":["/Users/jpek/Documents/GitHub/challenge/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport EditCustomer from './components/EditCustomer';\nimport CustomerList from './components/CustomerList';\nimport NavBar from './components/Layout/NavBar';\nimport Wrapper from './components/UI/Wrapper';\nimport Button from './components/UI/Button';\n\nfunction App() {\n  const [customers, setCustomers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchCustomersHandler = () => {\n    // try{\n    // const response = await\n    fetch(\n      'https://rawgit.com/wvchallenges/se-exp-challenge-invoice/master/settings.json'\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        setCustomers(data.customers);\n      });\n      \n  };\n\n  //     if(!response.ok) {\n  //       throw new Error('Something went wrong!')\n  //     }\n  //     const data = await response.json();\n\n  //     const loadedCustomers=[];\n\n  //     for (const id in data) {\n  //       loadedCustomers.push({\n  //         id: id,\n  //         name: data[key].name,\n  //         email: data[key].email,\n  //         channel: data[key].channel,\n  //         address: data[key].address,\n  //         postal: data[key].postal,\n  //         city: data[key].city,\n  //         province: data[key].province,\n  //         country: data[key].country,\n  //       });\n  //     }\n\n  //     setCustomers(loadedCustomers);\n  //   } catch (error) {\n  //     setError(error.message);\n  //   }\n  //   setIsLoading(false);\n  // }, []);\n\n  //   useEffect(()=>{\n  //     fetchCustomersHandler();\n  //   }, [fetchCustomersHandler]);\n\n  return (\n    <>\n      <NavBar />\n      <Wrapper>\n        <CustomerList />\n        {/* <EditCustomer /> */}\n        <Button onClick={fetchCustomersHandler} />\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMa,qBAAqB,GAAG,MAAM;IAClC;IACA;IACAC,KAAK,CACH,+EADG,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACD,CALH,EAMGF,IANH,CAMQG,IAAI,IAAI;MACZV,YAAY,CAACU,IAAI,CAACX,SAAN,CAAZ;IACD,CARH;EAUD,CAbD,CALa,CAoBb;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,OAAD;MAAA,wBACE,QAAC,YAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAGE,QAAC,MAAD;QAAQ,OAAO,EAAEM;MAAjB;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAUD;;GA9DQP,G;;KAAAA,G;AAgET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}