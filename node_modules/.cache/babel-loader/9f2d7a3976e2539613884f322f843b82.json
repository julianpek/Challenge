{"ast":null,"code":"import { useState } from 'react';\n\nconst useInput = validateValue => {\n  // const [enteredValue, setEnteredValue] = useState('');\n  // const [isTouched, setIsTouched] = useState(false);\n  // const valueIsValid = validateValue(enteredValue);\n  // const hasError = !validateValue && isTouched;\n  // const valueChangeHandler = e => {\n  //   setEnteredValue(e.target.value);\n  // };\n  // const valueBlurHandler = () => {\n  //   setIsTouched(true);\n  // };\n  // const reset = () => {\n  //   enteredValue('');\n  //   isTouched(false);\n  // };\n  return {\n    value: enteredValue,\n    valueIsValid,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset\n  };\n};\n\nexport default useInput;","map":{"version":3,"names":["useState","useInput","validateValue","value","enteredValue","valueIsValid","hasError","valueChangeHandler","valueBlurHandler","reset"],"sources":["/Users/jpek/Documents/GitHub/challenge/src/hooks/use-input.js"],"sourcesContent":["import { useState } from 'react';\n\nconst useInput = (validateValue) => {\n  // const [enteredValue, setEnteredValue] = useState('');\n  // const [isTouched, setIsTouched] = useState(false);\n\n  // const valueIsValid = validateValue(enteredValue);\n  // const hasError = !validateValue && isTouched;\n\n  // const valueChangeHandler = e => {\n  //   setEnteredValue(e.target.value);\n  // };\n\n  // const valueBlurHandler = () => {\n  //   setIsTouched(true);\n  // };\n\n  // const reset = () => {\n  //   enteredValue('');\n  //   isTouched(false);\n  // };\n\n  return {\n    value: enteredValue,\n    valueIsValid,\n    hasError,\n    valueChangeHandler,\n    valueBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;EAClC;EACA;EAEA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA,OAAO;IACLC,KAAK,EAAEC,YADF;IAELC,YAFK;IAGLC,QAHK;IAILC,kBAJK;IAKLC,gBALK;IAMLC;EANK,CAAP;AAQD,CA5BD;;AA8BA,eAAeR,QAAf"},"metadata":{},"sourceType":"module"}